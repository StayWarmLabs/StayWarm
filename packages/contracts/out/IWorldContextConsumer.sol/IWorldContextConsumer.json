{
  "abi": [
    {
      "inputs": [],
      "name": "_msgSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_msgValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "_msgSender()": "119df25f",
    "_msgValue()": "45ec9354",
    "_world()": "e1af802c",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_msgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_msgValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract should only be used for contracts without their own storage, like Systems.\",\"kind\":\"dev\",\"methods\":{\"_msgSender()\":{\"returns\":{\"_0\":\"The address of the `msg.sender` that called the World contract before the World routed the call to the WorldContextConsumer contract.\"}},\"_msgValue()\":{\"returns\":{\"_0\":\"The `msg.value` in the call to the World contract before the World routed the call to the WorldContextConsumer contract.\"}},\"_world()\":{\"returns\":{\"_0\":\"The address of the World contract that routed the call to this WorldContextConsumer.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165.\"},\"returns\":{\"_0\":\"True if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, false otherwise.\"}}},\"title\":\"WorldContextConsumer - Extracting trusted context values from appended calldata.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_msgSender()\":{\"notice\":\"Extract the `msg.sender` from the context appended to the calldata.\"},\"_msgValue()\":{\"notice\":\"Extract the `msg.value` from the context appended to the calldata.\"},\"_world()\":{\"notice\":\"Get the address of the World contract that routed the call to this WorldContextConsumer.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface.\"}},\"notice\":\"This contract is designed to extract trusted context values (like msg.sender and msg.value) from the appended calldata. It provides mechanisms similar to EIP-2771 (https://eips.ethereum.org/EIPS/eip-2771), but allowing any contract to be the trusted forwarder.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@latticexyz/world/src/IWorldContextConsumer.sol\":\"IWorldContextConsumer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@latticexyz/world/src/IERC165.sol\":{\"keccak256\":\"0x7997ebbdee6a2493f28e7032c7a8b906ade40f807d95734e2653c8f1b023ff47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8ca41bb2619bf27e5bf886d1322f0e2dffd096c49f7ae6e716541dd1e1ddce5\",\"dweb:/ipfs/Qmb8zATUWWTtiWaSLjbAe6PGnJPes9ANvEyk7pYoWR3P3Y\"]},\"node_modules/@latticexyz/world/src/IWorldContextConsumer.sol\":{\"keccak256\":\"0x22b8cb3ffcc21cb1657d57fc8ac929d2d6fdd199328e6f43ad2cb54f53dcd500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47c001f6b7c6d6e453c340618d23b1532078abb7d0fd7283405071e4e8ff8d2d\",\"dweb:/ipfs/QmRW3femBhqQCPwDEj4Jop2Dnd3EU21ufg7GDVwN4joCQu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_msgSender",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_msgValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceID",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_msgSender()": {
            "returns": {
              "_0": "The address of the `msg.sender` that called the World contract before the World routed the call to the WorldContextConsumer contract."
            }
          },
          "_msgValue()": {
            "returns": {
              "_0": "The `msg.value` in the call to the World contract before the World routed the call to the WorldContextConsumer contract."
            }
          },
          "_world()": {
            "returns": {
              "_0": "The address of the World contract that routed the call to this WorldContextConsumer."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas.",
            "params": {
              "interfaceID": "The interface identifier, as specified in ERC-165."
            },
            "returns": {
              "_0": "True if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, false otherwise."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "_msgSender()": {
            "notice": "Extract the `msg.sender` from the context appended to the calldata."
          },
          "_msgValue()": {
            "notice": "Extract the `msg.value` from the context appended to the calldata."
          },
          "_world()": {
            "notice": "Get the address of the World contract that routed the call to this WorldContextConsumer."
          },
          "supportsInterface(bytes4)": {
            "notice": "Query if a contract implements an interface."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@latticexyz/=node_modules/@latticexyz/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 3000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@latticexyz/world/src/IWorldContextConsumer.sol": "IWorldContextConsumer"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@latticexyz/world/src/IERC165.sol": {
        "keccak256": "0x7997ebbdee6a2493f28e7032c7a8b906ade40f807d95734e2653c8f1b023ff47",
        "urls": [
          "bzz-raw://c8ca41bb2619bf27e5bf886d1322f0e2dffd096c49f7ae6e716541dd1e1ddce5",
          "dweb:/ipfs/Qmb8zATUWWTtiWaSLjbAe6PGnJPes9ANvEyk7pYoWR3P3Y"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/world/src/IWorldContextConsumer.sol": {
        "keccak256": "0x22b8cb3ffcc21cb1657d57fc8ac929d2d6fdd199328e6f43ad2cb54f53dcd500",
        "urls": [
          "bzz-raw://47c001f6b7c6d6e453c340618d23b1532078abb7d0fd7283405071e4e8ff8d2d",
          "dweb:/ipfs/QmRW3femBhqQCPwDEj4Jop2Dnd3EU21ufg7GDVwN4joCQu"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@latticexyz/world/src/IWorldContextConsumer.sol",
    "id": 131866,
    "exportedSymbols": {
      "ERC165_INTERFACE_ID": [
        131812
      ],
      "IERC165": [
        131822
      ],
      "IWorldContextConsumer": [
        131865
      ],
      "WORLD_CONTEXT_CONSUMER_INTERFACE_ID": [
        131843
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1985:111",
    "nodes": [
      {
        "id": 131824,
        "nodeType": "PragmaDirective",
        "src": "32:25:111",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 131827,
        "nodeType": "ImportDirective",
        "src": "59:61:111",
        "nodes": [],
        "absolutePath": "node_modules/@latticexyz/world/src/IERC165.sol",
        "file": "./IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 131866,
        "sourceUnit": 131823,
        "symbolAliases": [
          {
            "foreign": {
              "id": 131825,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131822,
              "src": "68:7:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 131826,
              "name": "ERC165_INTERFACE_ID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131812,
              "src": "77:19:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 131843,
        "nodeType": "VariableDeclaration",
        "src": "431:206:111",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "WORLD_CONTEXT_CONSUMER_INTERFACE_ID",
        "nameLocation": "447:35:111",
        "scope": 131866,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes4",
          "typeString": "bytes4"
        },
        "typeName": {
          "id": 131829,
          "name": "bytes4",
          "nodeType": "ElementaryTypeName",
          "src": "431:6:111",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes4",
            "typeString": "bytes4"
          }
        },
        "value": {
          "commonType": {
            "typeIdentifier": "t_bytes4",
            "typeString": "bytes4"
          },
          "id": 131842,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "lValueRequested": false,
          "leftExpression": {
            "commonType": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "id": 131840,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "leftExpression": {
              "commonType": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              },
              "id": 131836,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "expression": {
                  "expression": {
                    "id": 131830,
                    "name": "IWorldContextConsumer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 131865,
                    "src": "485:21:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IWorldContextConsumer_$131865_$",
                      "typeString": "type(contract IWorldContextConsumer)"
                    }
                  },
                  "id": 131831,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberLocation": "507:10:111",
                  "memberName": "_msgSender",
                  "nodeType": "MemberAccess",
                  "referencedDeclaration": 131852,
                  "src": "485:32:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_declaration_view$__$returns$_t_address_$",
                    "typeString": "function IWorldContextConsumer._msgSender() view returns (address)"
                  }
                },
                "id": 131832,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "memberLocation": "518:8:111",
                "memberName": "selector",
                "nodeType": "MemberAccess",
                "src": "485:41:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "^",
              "rightExpression": {
                "expression": {
                  "expression": {
                    "id": 131833,
                    "name": "IWorldContextConsumer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 131865,
                    "src": "531:21:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IWorldContextConsumer_$131865_$",
                      "typeString": "type(contract IWorldContextConsumer)"
                    }
                  },
                  "id": 131834,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberLocation": "553:9:111",
                  "memberName": "_msgValue",
                  "nodeType": "MemberAccess",
                  "referencedDeclaration": 131858,
                  "src": "531:31:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_declaration_view$__$returns$_t_uint256_$",
                    "typeString": "function IWorldContextConsumer._msgValue() view returns (uint256)"
                  }
                },
                "id": 131835,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "memberLocation": "563:8:111",
                "memberName": "selector",
                "nodeType": "MemberAccess",
                "src": "531:40:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "src": "485:86:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "nodeType": "BinaryOperation",
            "operator": "^",
            "rightExpression": {
              "expression": {
                "expression": {
                  "id": 131837,
                  "name": "IWorldContextConsumer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 131865,
                  "src": "576:21:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_IWorldContextConsumer_$131865_$",
                    "typeString": "type(contract IWorldContextConsumer)"
                  }
                },
                "id": 131838,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "memberLocation": "598:6:111",
                "memberName": "_world",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 131864,
                "src": "576:28:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_declaration_view$__$returns$_t_address_$",
                  "typeString": "function IWorldContextConsumer._world() view returns (address)"
                }
              },
              "id": 131839,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberLocation": "605:8:111",
              "memberName": "selector",
              "nodeType": "MemberAccess",
              "src": "576:37:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "src": "485:128:111",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            }
          },
          "nodeType": "BinaryOperation",
          "operator": "^",
          "rightExpression": {
            "id": 131841,
            "name": "ERC165_INTERFACE_ID",
            "nodeType": "Identifier",
            "overloadedDeclarations": [],
            "referencedDeclaration": 131812,
            "src": "618:19:111",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            }
          },
          "src": "485:152:111",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes4",
            "typeString": "bytes4"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 131865,
        "nodeType": "ContractDefinition",
        "src": "1114:902:111",
        "nodes": [
          {
            "id": 131852,
            "nodeType": "FunctionDefinition",
            "src": "1406:54:111",
            "nodes": [],
            "documentation": {
              "id": 131847,
              "nodeType": "StructuredDocumentation",
              "src": "1161:242:111",
              "text": " @notice Extract the `msg.sender` from the context appended to the calldata.\n @return The address of the `msg.sender` that called the World contract\n before the World routed the call to the WorldContextConsumer contract."
            },
            "functionSelector": "119df25f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "1415:10:111",
            "parameters": {
              "id": 131848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1425:2:111"
            },
            "returnParameters": {
              "id": 131851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131850,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131852,
                  "src": "1451:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1450:9:111"
            },
            "scope": 131865,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 131858,
            "nodeType": "FunctionDefinition",
            "src": "1695:53:111",
            "nodes": [],
            "documentation": {
              "id": 131853,
              "nodeType": "StructuredDocumentation",
              "src": "1464:228:111",
              "text": " @notice Extract the `msg.value` from the context appended to the calldata.\n @return The `msg.value` in the call to the World contract before the World routed the\n call to the WorldContextConsumer contract."
            },
            "functionSelector": "45ec9354",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgValue",
            "nameLocation": "1704:9:111",
            "parameters": {
              "id": 131854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1713:2:111"
            },
            "returnParameters": {
              "id": 131857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131856,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131858,
                  "src": "1739:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1739:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1738:9:111"
            },
            "scope": 131865,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 131864,
            "nodeType": "FunctionDefinition",
            "src": "1964:50:111",
            "nodes": [],
            "documentation": {
              "id": 131859,
              "nodeType": "StructuredDocumentation",
              "src": "1752:209:111",
              "text": " @notice Get the address of the World contract that routed the call to this WorldContextConsumer.\n @return The address of the World contract that routed the call to this WorldContextConsumer."
            },
            "functionSelector": "e1af802c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_world",
            "nameLocation": "1973:6:111",
            "parameters": {
              "id": 131860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:2:111"
            },
            "returnParameters": {
              "id": 131863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131864,
                  "src": "2005:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:9:111"
            },
            "scope": 131865,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 131845,
              "name": "IERC165",
              "nameLocations": [
                "1149:7:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 131822,
              "src": "1149:7:111"
            },
            "id": 131846,
            "nodeType": "InheritanceSpecifier",
            "src": "1149:7:111"
          }
        ],
        "canonicalName": "IWorldContextConsumer",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 131844,
          "nodeType": "StructuredDocumentation",
          "src": "640:473:111",
          "text": " @title WorldContextConsumer - Extracting trusted context values from appended calldata.\n @notice This contract is designed to extract trusted context values (like msg.sender and msg.value)\n from the appended calldata. It provides mechanisms similar to EIP-2771 (https://eips.ethereum.org/EIPS/eip-2771),\n but allowing any contract to be the trusted forwarder.\n @dev This contract should only be used for contracts without their own storage, like Systems."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          131865,
          131822
        ],
        "name": "IWorldContextConsumer",
        "nameLocation": "1124:21:111",
        "scope": 131866,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 111
}